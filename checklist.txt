Complex points in our code:
urls.py-located inside of the HelloWorld/HelloWorld directory
 a file required by the Django framework; inside, we have a method that calls the function
'music', which is inside views.py, when a client goes to the address localhost:8000/song. It calls
music3, when a client goes to the address localhost:8000/song/<birth_year>/ (ex: localhost:8000/song/1997/).


Inside the views.py file (located in the HelloWorldApp directory), a file used for the Django framework, 
there are two methods: music and music3. Music is the method called when a client goes to the home page of the 
website, localhost:8000/song. It renders our html file with no variables passed into its context. music3 loads 
the same html file, but with two variables inside the context: the embed code of the randomly selected YouTube 
video, and the birth year. music3 calls our webcrawling python script, crawler.py, to obtain the embed code.


crawler.py- Our webcrawling Python script. This file has 5 methods; 4 that are designed to work sequentially 
one (crawl()) that calls the other 4 methods. The first method, getYear, parses top40charts.net and finds 
the link to the top 40 chart of the desired year. The second,getTop40, goes to the url obtained by getYear and
picks one of the 40 YouTube links at random and returns the url. The third, getVideo, goes to the YouTube link,
which is a link to a YouTube search for the name of the top 40 song, picks the top video, and returns that url.
The 4th and last method, getEmbedCode, goes to the url of the YouTube video, finds the embed code to the video,
and returns it.

Lastly, musicYouKnow.html musicYouKnow2.html(both located inside of the HelloWorldApp/templates directory) 
are, for the most part basic html files. However, we used Django to load it differently based on the context 
variables previously mentioned. The year variable is used to load the year you previously input into the text 
field of the form element, so you can, theoretically, repeatedly click the Find Music button and keep getting 
new songs you know. The embed variable is the url generated by our web-crawler, and if it's not null, the html 
file loads an embedded version of the video in the webpage; otherwise, it just loads the button and text fields. 
We seperated them into two html files so that they can have seperate css.

How to use our project:
First, you need to have Python and its libraries installed. Then, you need Django installed; the easiest way is 
to just use pip to install it. Once both are installed, move crawler.py into the Python Lib folder (usually located
inside your appdata/local/programs folder, if you're on Windows). Then, navigate to the HelloWorld folder in a console
window and use the command:		python manage.py runserver		to run the Django server. From there, use any web browser
to navigate to the url localhost:8000/song to go to the initial page of our website. At that point, just enter your birth
year (any year between 1938 and 1999) and click the button!
